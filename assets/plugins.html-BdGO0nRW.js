import{_ as n,c as e,d as a,o as t}from"./app-B7Si1d5O.js";const i={};function l(o,s){return t(),e("div",null,[...s[0]||(s[0]=[a(`<h1 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin"><span>Plugin</span></a></h1><div class="hint-container caution"><p class="hint-container-title">Caution</p><p>The Plugin system is currently under revision and is most likely to change significantly in release 0.12</p></div><p>Plugins provide users and developers the ability to have a modular system of extending the functionality of the spacialist software without the need of having all functionality in one gigantic application.</p><h2 id="plugin-flow" tabindex="-1"><a class="header-anchor" href="#plugin-flow"><span>Plugin Flow</span></a></h2><p>Upload &gt; Install &gt; Activate &gt;&lt; Deactivate &lt; Uninstall &lt; Remove</p><h2 id="plugin-structure" tabindex="-1"><a class="header-anchor" href="#plugin-structure"><span>Plugin Structure</span></a></h2><ul><li>ðŸ“‚ .vscode</li><li>ðŸ“‚ App* <ul><li>Main.php*</li></ul></li><li>ðŸ“‚ build</li><li>ðŸ“‚ Migration</li><li>ðŸ“‚ routes</li><li>ðŸ“‚ storage</li><li>ðŸ“‚ src <ul><li>ðŸ“‚ components</li><li>App.vue</li><li>main.js</li></ul></li><li>manifest.xml*</li><li>package.json*</li><li>index.html*</li><li>README.md*</li><li>CHANGELOG.md*</li><li>vite.config.js*</li></ul><p>* required</p><h2 id="plugin-permissions" tabindex="-1"><a class="header-anchor" href="#plugin-permissions"><span>Plugin Permissions</span></a></h2><p>Plugins can be hooked to a variety of locations of the Spacialist.</p><h3 id="backend" tabindex="-1"><a class="header-anchor" href="#backend"><span>Backend</span></a></h3><ul><li>Migrations</li><li>Routes</li><li>Models</li><li>Storage</li></ul><h3 id="frontend" tabindex="-1"><a class="header-anchor" href="#frontend"><span>Frontend</span></a></h3><ul><li>as Links <ul><li>SettingsDropdown</li></ul></li><li>as Components <ul><li>DetailsTab</li></ul></li><li>as Views <ul><li>Routes</li></ul></li></ul><h2 id="register" tabindex="-1"><a class="header-anchor" href="#register"><span>Register</span></a></h2><p>Currently available options are:</p><ul><li><a href="#register">register*</a></li><li><a href="#register-i18n">registerI18N</a></li><li><a href="#register-routes">registerRoutes</a></li><li><a href="#register-preferences">registerPreference</a></li><li><a href="#into-slot">intoSlot</a></li></ul><ul><li>is required to be called by the plugin (unless it only uses PHP)</li></ul><h4 id="register-1" tabindex="-1"><a class="header-anchor" href="#register-1"><span>Register</span></a></h4><p>You need to register a plugin with the register function:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">*</span><span class="token punctuation">,</span> i18n<span class="token punctuation">,</span> routes<span class="token punctuation">,</span> store<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Id</strong> <em>string</em> - is required and must be unique for your plugin.</li><li><strong>i18n</strong> <a href="#i18n-object"><em>i18nObject</em></a> - automatically calls the <a href="#register-i18n"><em>registerI18N(i18n)</em></a> method</li><li><strong>routes</strong> - <a href="#routes-array"><em>routesArray</em></a> automatically calls the <a href="#register-routes"><em>registerRoutes(routes)</em></a> method</li><li><strong>store</strong> store of the plugin to register</li></ul><h4 id="register-components" tabindex="-1"><a class="header-anchor" href="#register-components"><span>Register Components</span></a></h4><p>You can register components either to use them as <a href="/spacialist-docs/user/attribute">Attribute</a> or simply register a component for other plugins to utilize.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">registerComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">of</span><span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    key<span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    type<span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    datatype<span class="token operator">**</span><span class="token punctuation">,</span></span>
<span class="line">    component<span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>of</strong> <em>string</em> - unique id string of the plugin.</li><li><strong>key</strong> <em>string</em> - unique key string of the preference.</li><li><strong>type</strong> _[&#39;attribute&#39; | &#39;component&#39;] - if the component is used as attribute.</li><li><strong>datatype</strong> <em>string</em> - name of the datatype (** required if type is attribute).</li><li><strong>component</strong> <em>component</em> - component to mount</li></ul><h4 id="register-i18n" tabindex="-1"><a class="header-anchor" href="#register-i18n"><span>Register I18N</span></a></h4><p>The i18n method is used to register the i18n files of the plugin.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">registerI18N</span><span class="token punctuation">(</span>id<span class="token operator">*</span><span class="token punctuation">,</span> i18n<span class="token operator">*</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Id</strong> <em>string</em> - unique id string of the plugin.</li><li><strong>i18n</strong> <a href="#i18n-object"><em>i18nObject</em></a> - the i18n object of the plugin.</li></ul><h5 id="i18n-object" tabindex="-1"><a class="header-anchor" href="#i18n-object"><span>I18N Object</span></a></h5><p>The i18n object is a JSON object with the following structure:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;en&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;This is a message in english.&quot;</span></span>
<span class="line">        ...</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;de&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Dies ist eine Nachricht auf deutsch.&quot;</span></span>
<span class="line">        ...</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="register-routes" tabindex="-1"><a class="header-anchor" href="#register-routes"><span>Register Routes</span></a></h4><p>The routes method is used to register the routes of the plugin.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">registerRoutes</span><span class="token punctuation">(</span>id<span class="token operator">*</span><span class="token punctuation">,</span> routes<span class="token operator">*</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>Id</strong> <em>string</em> - unique id string of the plugin.</li><li><strong>routes</strong> <a href="#routes-array"><em>routesArray</em></a> - the routes object of the plugin.</li></ul><h5 id="routes-array" tabindex="-1"><a class="header-anchor" href="#routes-array"><span>Routes Array</span></a></h5><p>Array that contains <a href="https://router.vuejs.org/api/interfaces/RouteRecordNormalized.html" target="_blank" rel="noopener noreferrer">vue-router routes</a>. For example:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line">...</span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/plugin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plugin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> MyPluginComponent<span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Plugin&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    ...</span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="register-preferences" tabindex="-1"><a class="header-anchor" href="#register-preferences"><span>Register Preferences</span></a></h4><p>The preferences method is used to register the preferences of the plugin.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">registerRoutes</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">of</span><span class="token operator">*</span><span class="token punctuation">,</span> </span>
<span class="line">    key<span class="token operator">*</span><span class="token punctuation">,</span> </span>
<span class="line">    label<span class="token operator">*</span><span class="token punctuation">,</span> </span>
<span class="line">    category<span class="token operator">*</span><span class="token punctuation">,</span> </span>
<span class="line">    subcatogery<span class="token operator">*</span><span class="token punctuation">,</span> </span>
<span class="line">    custom_subcategory<span class="token punctuation">,</span> </span>
<span class="line">    custom_label<span class="token punctuation">,</span></span>
<span class="line">    component<span class="token punctuation">,</span> </span>
<span class="line">    componentTag<span class="token punctuation">,</span> </span>
<span class="line">    data<span class="token punctuation">,</span> </span>
<span class="line">    default_value</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>of</strong> <em>string</em> - unique id string of the plugin.</li><li><strong>key</strong> <em>string</em> - unique key string of the preference.</li><li><strong>label</strong> <em>string</em> - label of the preference.</li><li><strong>category</strong> [<em>&quot;system&quot;</em>,<em>&quot;user&quot;</em>] - category of the preference ().</li><li><strong>subcategory</strong> <em>string</em> - subcategory of the preference.</li><li><strong>custom_subcategory</strong> <em>string</em> - custom subcategory of the preference.</li><li><strong>custom_label</strong> <em>string</em> - custom label of the preference. <strong>Must be set if custom_subcategory is set.</strong></li><li><strong>component</strong> <em>string</em> - component of the preference.</li><li><strong>componentTag</strong> <em>string</em> - tag of the component.</li></ul><h4 id="into-slot" tabindex="-1"><a class="header-anchor" href="#into-slot"><span>Into Slot</span></a></h4><p>The intoSlot method is used to register the plugin into a slot. E.g. the &#39;Tab&#39; view of the details page.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">intoSlot</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">of</span><span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    slot<span class="token operator">*</span><span class="token punctuation">,</span></span>
<span class="line">    component<span class="token punctuation">,</span></span>
<span class="line">    componentTag<span class="token punctuation">,</span></span>
<span class="line">    key<span class="token punctuation">,</span></span>
<span class="line">    icon<span class="token punctuation">,</span></span>
<span class="line">    label<span class="token punctuation">,</span></span>
<span class="line">    href</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>of</strong> <em>string</em> - unique id string of the plugin.</li><li><strong>slot</strong> <em>[&quot;tab&quot;,&quot;tools&quot;,&quot;settings&quot;]</em> - unique slot string of the plugin.</li><li><strong>key</strong> <em>string</em> - unique key string of the slot.</li><li><strong>icon</strong> <em>string</em> - icon of the slot.</li><li><strong>label</strong> <em>string</em> - label of the slot.</li><li><strong>href</strong> <em>string</em> - <em>Unknown at the moment</em>.</li><li><strong>component</strong> <em>string</em> - component of the slot. Requires componentTag to be set.</li><li><strong>componentTag</strong> <em>string</em> - tag of the component, <strong>defaults to key</strong>.</li></ul>`,48)])])}const r=n(i,[["render",l],["__file","plugins.html.vue"]]),c=JSON.parse('{"path":"/developer/plugins.html","title":"Plugin","lang":"en-US","frontmatter":{},"git":{"updatedTime":1756730056000,"contributors":[{"name":"Severino","username":"Severino","email":"severin.opel@hotmail.com","commits":4,"url":"https://github.com/Severino"},{"name":"Sev","username":"Sev","email":"captain.sev@outlook.com","commits":1,"url":"https://github.com/Sev"}],"changelog":[{"hash":"213d88e41e9c87f176eb3e75a757dccdf551bb2a","time":1756730056000,"email":"severin.opel@hotmail.com","author":"Severino","message":"Add register component"},{"hash":"3c2424e9312faa22f8c3c0b5f7dc62dcc5c045bc","time":1743758580000,"email":"captain.sev@outlook.com","author":"Sev","message":"Improved plugin documentation"},{"hash":"fdadabbd2dcd240174eeca9355361b2c1662764c","time":1728571681000,"email":"severin.opel@hotmail.com","author":"Severino","message":"restructuring"},{"hash":"1a71f4b9c600d3ad471806c09c586e5618588435","time":1727867972000,"email":"severin.opel@hotmail.com","author":"Severino","message":"Reworked structure"},{"hash":"b469c2ea27fd942984289cec2eea9acf9eef60eb","time":1727796523000,"email":"severin.opel@hotmail.com","author":"Severino","message":"initial commit"}]},"filePathRelative":"developer/plugins.md"}');export{r as comp,c as data};
