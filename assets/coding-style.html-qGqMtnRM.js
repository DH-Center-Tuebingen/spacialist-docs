import{_ as n,c as s,d as e,o as t}from"./app-B7Si1d5O.js";const l={};function i(p,a){return t(),s("div",null,[...a[0]||(a[0]=[e(`<h1 id="coding-style" tabindex="-1"><a class="header-anchor" href="#coding-style"><span>Coding Style</span></a></h1><h2 id="general-coding-style" tabindex="-1"><a class="header-anchor" href="#general-coding-style"><span>General Coding Style</span></a></h2><h2 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>HTML</span></a></h2><table><thead><tr><th>name</th><th>usage</th></tr></thead><tbody><tr><td>Attribute New Line</td><td>Every attribute a separate line (if only one exists it can be on the same line)</td></tr><tr><td>Initial Indent</td><td>✅</td></tr></tbody></table><h2 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>Javascript</span></a></h2><table><thead><tr><th>name</th><th>usage</th></tr></thead><tbody><tr><td>Initial Indent</td><td>✅</td></tr></tbody></table><h2 id="php" tabindex="-1"><a class="header-anchor" href="#php"><span>PHP</span></a></h2><table><thead><tr><th>name</th><th>usage</th></tr></thead><tbody><tr><td>Attribute New Line</td><td>Every attribute a separate line (if only one exists it can be on the same line)</td></tr><tr><td>Initial Indent</td><td>✅</td></tr></tbody></table><h2 id="vuejs" tabindex="-1"><a class="header-anchor" href="#vuejs"><span>VueJS</span></a></h2><table><thead><tr><th>name</th><th>usage</th></tr></thead><tbody><tr><td>API Style</td><td>Composition API <strong>without</strong> the &#39;script setup&#39; code block.</td></tr><tr><td>Component Names</td><td>Pascal Case</td></tr></tbody></table><h2 id="laravel" tabindex="-1"><a class="header-anchor" href="#laravel"><span>Laravel</span></a></h2><table><thead><tr><th>name</th><th>usage</th></tr></thead><tbody><tr><td>Controllers</td><td>Slim Controllers -&gt; Logic should be inside models Control only handles the Requests</td></tr><tr><td>Models</td><td>If we need additional functionality, it shoudl reside inside the model, not the controller, as it can be easily reused inside different controllers but still be in it&#39;s associated model.</td></tr><tr><td>Component Names</td><td>Pascal Case</td></tr></tbody></table><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">  <span class="token keyword">import</span> <span class="token punctuation">{</span>reactive<span class="token punctuation">}</span> from vue</span>
<span class="line">  <span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&quot;@/components/MyComponent&quot;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> MyComponent <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">active</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">          state</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13)])])}const c=n(l,[["render",i],["__file","coding-style.html.vue"]]),r=JSON.parse('{"path":"/developer/coding-style.html","title":"Coding Style","lang":"en-US","frontmatter":{},"git":{"updatedTime":1728571681000,"contributors":[{"name":"Severino","username":"Severino","email":"severin.opel@hotmail.com","commits":3,"url":"https://github.com/Severino"}],"changelog":[{"hash":"fdadabbd2dcd240174eeca9355361b2c1662764c","time":1728571681000,"email":"severin.opel@hotmail.com","author":"Severino","message":"restructuring"},{"hash":"1a71f4b9c600d3ad471806c09c586e5618588435","time":1727867972000,"email":"severin.opel@hotmail.com","author":"Severino","message":"Reworked structure"},{"hash":"b469c2ea27fd942984289cec2eea9acf9eef60eb","time":1727796523000,"email":"severin.opel@hotmail.com","author":"Severino","message":"initial commit"}]},"filePathRelative":"developer/coding-style.md"}');export{c as comp,r as data};
